language: cpp
dist: xenial

# see https://github.com/nlohmann/json/blob/develop/.travis.yml
matrix:
  include:

  # g++-8
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=11"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=14"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=17"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  # g++-8 32bit
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=11"
    - CXXFLAGS="-m32"
    - LDFLAGS="-m32"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8-multilib', 'linux-libc-dev:i386']

  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=14"
    - CXXFLAGS="-m32"
    - LDFLAGS="-m32"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8-multilib', 'linux-libc-dev:i386']

  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=17"
    - CXXFLAGS="-m32"
    - LDFLAGS="-m32"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8-multilib', 'linux-libc-dev:i386']

  # clang++-6.0
  - os: linux
    compiler: clang
    env:
    - COMPILER=clang++-6.0
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=11"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6.0']
        packages: ['g++-6', 'clang-6.0',]

  - os: linux
    compiler: clang
    env:
    - COMPILER=clang++-6.0
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=14"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6.0']
        packages: ['g++-6', 'clang-6.0',]

  - os: linux
    compiler: clang
    env:
    - COMPILER=clang++-6.0
    - CMAKE_OPTIONS="-DNB_sanitizer=ON -DNB_cxx_standard=17"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6.0']
        packages: ['g++-6', 'clang-6.0',]

install:
  - if [[ "${CODE_COVERAGE}" == "true" ]]; then gem install coveralls-lcov ; fi

script:
  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # show OS/compiler version
  - uname -a
  - $CXX --version

  # build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release ${CMAKE_OPTIONS} && cmake --build . -- -j2

  # check file
  - file ./nb

  # run test
  - ./nb
  
  # coverage
  - |
    if [[ "${CODE_COVERAGE}" = "true" ]]; then
      cmake --build . --target lcov
    fi
